#Cahier des charges de la fonction:
#récupérer le nom de la branche, chopper la date et heure et mettre ca en output dans un fichier
#récupérer le fichier dans un autre job, et lutiliser pour le formatter et l'afficher
name: Use Artifacts
on:
    push:
        branches:
            - main
            - '*Test'
jobs:
    gen-output:
        runs-on: ubuntu-latest
        outputs:
            branch-name: ${{ steps.extract_branch_name.outputs.branch }}
            date: ${{ steps.extract_date.outputs.date }}
        steps:
            - name: Get name branch
              run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
              id: extract_branch_name
            - name: Get hour and date
              run: echo "date=$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT
              id: extract_date

    display-output:
        needs: gen-output
        runs-on: ubuntu-latest
        steps:
          - name: Display output
            run: echo ${{ needs.gen-output.outputs.branch-name }} ${{ needs.gen-output.outputs.date }}
    #Job qui run en parallel du premier (ainsi que ces descendants), qui a pour but de creer un fichier text de log tandis que son descendant l'affiche
    gen-artifacts:
        runs-on: ubuntu-latest
        needs: gen-output
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          - name: Generate log file
            run: echo "branch ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} was pushed at ${{needs.gen-output.outputs.date}}" > "log-${{needs.gen-output.outputs.date}}.log"
          - name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
                name: log-file
                path: "log-${{needs.gen-output.outputs.date}}.log"

    display-artifacts:
        needs: [gen-artifacts,gen-output]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: log-file
          - name: Display artifact
            run: cat "log-${{needs.gen-output.outputs.date}}.log"
          - name: Git config
            run: |
              git config --global user.email "samuel.casin45@gmail.com
              git config --global user.name "BobbyLaFrite"  
          - name: Save on git
            run: |
              git add -f "log-${{needs.gen-output.outputs.date}}.log"
              git commit -m "Add log file"
              git push





            
          


        



